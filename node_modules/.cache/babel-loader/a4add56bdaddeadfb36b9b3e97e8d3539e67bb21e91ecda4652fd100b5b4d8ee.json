{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import'./index.css';import App from'./App';import reportWebVitals from'./reportWebVitals';import{jsx as _jsx}from\"react/jsx-runtime\";const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{})}));// Enhanced performance monitoring\nconst logPerformanceMetrics=metric=>{console.log('üìä Performance Metric:',{name:metric.name,value:metric.value,rating:metric.rating,delta:metric.delta,id:metric.id});// Log specific metrics with emojis for easy identification\nswitch(metric.name){case'CLS':console.log('üéØ Cumulative Layout Shift:',metric.value,`(${metric.rating})`);break;case'FID':console.log('‚ö° First Input Delay:',metric.value,`(${metric.rating})`);break;case'FCP':console.log('üöÄ First Contentful Paint:',metric.value,`(${metric.rating})`);break;case'LCP':console.log('üìà Largest Contentful Paint:',metric.value,`(${metric.rating})`);break;case'TTFB':console.log('üåê Time to First Byte:',metric.value,`(${metric.rating})`);break;default:console.log('üìä Other Metric:',metric.name,metric.value,`(${metric.rating})`);}};// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(logPerformanceMetrics);","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsx","_jsx","root","createRoot","document","getElementById","render","StrictMode","children","logPerformanceMetrics","metric","console","log","name","value","rating","delta","id"],"sources":["/home/seconduser/projects/yumemi-website/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// Enhanced performance monitoring\nconst logPerformanceMetrics = (metric) => {\n  console.log('üìä Performance Metric:', {\n    name: metric.name,\n    value: metric.value,\n    rating: metric.rating,\n    delta: metric.delta,\n    id: metric.id\n  });\n  \n  // Log specific metrics with emojis for easy identification\n  switch (metric.name) {\n    case 'CLS':\n      console.log('üéØ Cumulative Layout Shift:', metric.value, `(${metric.rating})`);\n      break;\n    case 'FID':\n      console.log('‚ö° First Input Delay:', metric.value, `(${metric.rating})`);\n      break;\n    case 'FCP':\n      console.log('üöÄ First Contentful Paint:', metric.value, `(${metric.rating})`);\n      break;\n    case 'LCP':\n      console.log('üìà Largest Contentful Paint:', metric.value, `(${metric.rating})`);\n      break;\n    case 'TTFB':\n      console.log('üåê Time to First Byte:', metric.value, `(${metric.rating})`);\n      break;\n    default:\n      console.log('üìä Other Metric:', metric.name, metric.value, `(${metric.rating})`);\n  }\n};\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(logPerformanceMetrics);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhD,KAAM,CAAAC,IAAI,CAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACTL,IAAA,CAACL,KAAK,CAACW,UAAU,EAAAC,QAAA,cACfP,IAAA,CAACH,GAAG,GAAE,CAAC,CACS,CACpB,CAAC,CAED;AACA,KAAM,CAAAW,qBAAqB,CAAIC,MAAM,EAAK,CACxCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAE,CACpCC,IAAI,CAAEH,MAAM,CAACG,IAAI,CACjBC,KAAK,CAAEJ,MAAM,CAACI,KAAK,CACnBC,MAAM,CAAEL,MAAM,CAACK,MAAM,CACrBC,KAAK,CAAEN,MAAM,CAACM,KAAK,CACnBC,EAAE,CAAEP,MAAM,CAACO,EACb,CAAC,CAAC,CAEF;AACA,OAAQP,MAAM,CAACG,IAAI,EACjB,IAAK,KAAK,CACRF,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEF,MAAM,CAACI,KAAK,CAAE,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC,CAC9E,MACF,IAAK,KAAK,CACRJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEF,MAAM,CAACI,KAAK,CAAE,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC,CACvE,MACF,IAAK,KAAK,CACRJ,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEF,MAAM,CAACI,KAAK,CAAE,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC,CAC7E,MACF,IAAK,KAAK,CACRJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEF,MAAM,CAACI,KAAK,CAAE,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC,CAC/E,MACF,IAAK,MAAM,CACTJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEF,MAAM,CAACI,KAAK,CAAE,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC,CACzE,MACF,QACEJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEF,MAAM,CAACG,IAAI,CAAEH,MAAM,CAACI,KAAK,CAAE,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC,CACpF,CACF,CAAC,CAED;AACA;AACA;AACAhB,eAAe,CAACU,qBAAqB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}