{"ast":null,"code":"var _jsxFileName = \"/home/seconduser/projects/yumemi-website/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this));\n\n// Enhanced performance monitoring\nconst logPerformanceMetrics = metric => {\n  console.log('üìä Performance Metric:', {\n    name: metric.name,\n    value: metric.value,\n    rating: metric.rating,\n    delta: metric.delta,\n    id: metric.id\n  });\n\n  // Log specific metrics with emojis for easy identification\n  switch (metric.name) {\n    case 'CLS':\n      console.log('üéØ Cumulative Layout Shift:', metric.value, `(${metric.rating})`);\n      break;\n    case 'FID':\n      console.log('‚ö° First Input Delay:', metric.value, `(${metric.rating})`);\n      break;\n    case 'FCP':\n      console.log('üöÄ First Contentful Paint:', metric.value, `(${metric.rating})`);\n      break;\n    case 'LCP':\n      console.log('üìà Largest Contentful Paint:', metric.value, `(${metric.rating})`);\n      break;\n    case 'TTFB':\n      console.log('üåê Time to First Byte:', metric.value, `(${metric.rating})`);\n      break;\n    default:\n      console.log('üìä Other Metric:', metric.name, metric.value, `(${metric.rating})`);\n  }\n};\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(logPerformanceMetrics);","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","logPerformanceMetrics","metric","console","log","name","value","rating","delta","id"],"sources":["/home/seconduser/projects/yumemi-website/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// Enhanced performance monitoring\nconst logPerformanceMetrics = (metric) => {\n  console.log('üìä Performance Metric:', {\n    name: metric.name,\n    value: metric.value,\n    rating: metric.rating,\n    delta: metric.delta,\n    id: metric.id\n  });\n  \n  // Log specific metrics with emojis for easy identification\n  switch (metric.name) {\n    case 'CLS':\n      console.log('üéØ Cumulative Layout Shift:', metric.value, `(${metric.rating})`);\n      break;\n    case 'FID':\n      console.log('‚ö° First Input Delay:', metric.value, `(${metric.rating})`);\n      break;\n    case 'FCP':\n      console.log('üöÄ First Contentful Paint:', metric.value, `(${metric.rating})`);\n      break;\n    case 'LCP':\n      console.log('üìà Largest Contentful Paint:', metric.value, `(${metric.rating})`);\n      break;\n    case 'TTFB':\n      console.log('üåê Time to First Byte:', metric.value, `(${metric.rating})`);\n      break;\n    default:\n      console.log('üìä Other Metric:', metric.name, metric.value, `(${metric.rating})`);\n  }\n};\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(logPerformanceMetrics);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTL,OAAA,CAACL,KAAK,CAACW,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACH,GAAG;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA,MAAMC,qBAAqB,GAAIC,MAAM,IAAK;EACxCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE;IACpCC,IAAI,EAAEH,MAAM,CAACG,IAAI;IACjBC,KAAK,EAAEJ,MAAM,CAACI,KAAK;IACnBC,MAAM,EAAEL,MAAM,CAACK,MAAM;IACrBC,KAAK,EAAEN,MAAM,CAACM,KAAK;IACnBC,EAAE,EAAEP,MAAM,CAACO;EACb,CAAC,CAAC;;EAEF;EACA,QAAQP,MAAM,CAACG,IAAI;IACjB,KAAK,KAAK;MACRF,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,MAAM,CAACI,KAAK,EAAE,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC;MAC9E;IACF,KAAK,KAAK;MACRJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,MAAM,CAACI,KAAK,EAAE,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC;MACvE;IACF,KAAK,KAAK;MACRJ,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,MAAM,CAACI,KAAK,EAAE,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC;MAC7E;IACF,KAAK,KAAK;MACRJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,MAAM,CAACI,KAAK,EAAE,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC;MAC/E;IACF,KAAK,MAAM;MACTJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,MAAM,CAACI,KAAK,EAAE,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC;MACzE;IACF;MACEJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,MAAM,CAACG,IAAI,EAAEH,MAAM,CAACI,KAAK,EAAE,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC;EACpF;AACF,CAAC;;AAED;AACA;AACA;AACApB,eAAe,CAACc,qBAAqB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}